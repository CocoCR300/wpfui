<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Wpf.Ui.Controls" xmlns:converters="clr-namespace:Wpf.Ui.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorPickerSlider.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/Styles/Controls/ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:CornerRadiusDoubleValueConverter x:Key="CornerRadiusDoubleValueConverter" />

    <sys:Double x:Key="ColorPickerSliderBottomRightCornerRadius">6</sys:Double>
    <sys:Double x:Key="ColorPickerSliderTopLeftCornerRadius">6</sys:Double>
    
    <sys:Double x:Key="ColorPickerVerticalOrientationMaxHeight">392</sys:Double>
    <sys:Double x:Key="ColorPickerVerticalOrientationMaxWidth">392</sys:Double>
    <sys:Double x:Key="ColorPickerVerticalOrientationMinHeight">312</sys:Double>
    <sys:Double x:Key="ColorPickerVerticalOrientationMinWidth">312</sys:Double>

    <GridLength x:Key="ColorPickerTextInputHorizontalOrientationMargin">122</GridLength>

    <SolidColorBrush x:Key="ColorPickerBorderBrush" Color="{DynamicResource ControlStrokeColorDefault}" />
    <SolidColorBrush x:Key="ColorPickerHeaderContentDisabled" Color="{DynamicResource TextFillColorDarkDisabled}" />

    <Style x:Key="DefaultColorPicker" TargetType="controls:ColorPicker">
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ColorPicker">
                    <Border CornerRadius="{TemplateBinding CornerRadius}" Padding="0,4">
                        <Grid Background="{TemplateBinding Background}"
                              MaxWidth="{DynamicResource ColorPickerVerticalOrientationMaxWidth}"
                              MinWidth="{DynamicResource ColorPickerVerticalOrientationMinWidth}"
                              Name="RootGrid">
                            <Grid.Resources>
                                <!-- TODO: Replace color -->
                                <SolidColorBrush x:Key="CheckerColorBrush" Color="Gray" />
                            </Grid.Resources>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid Margin="0,0,0,16" Name="ColorSpectrumGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <controls:ColorSpectrum x:Name="ColorSpectrum" Grid.Column="0" Grid.Row="0"
                                                            Components="{TemplateBinding ColorSpectrumComponents}"
                                                            CornerRadius="{TemplateBinding CornerRadius}"
                                                            MaxHeight="336" MaxHue="{TemplateBinding MaxHue}"
                                                            MaxSaturation="{TemplateBinding MaxSaturation}"
                                                            MaxValue="{TemplateBinding MaxValue}" MaxWidth="336" MinHeight="256"
                                                            MinHue="{TemplateBinding MinHue}"
                                                            MinSaturation="{TemplateBinding MinSaturation}"
                                                            MinValue="{TemplateBinding MinValue}" MinWidth="256"
                                                            Shape="{TemplateBinding ColorSpectrumShape}" TabIndex="0"/>
                                    <Grid x:Name="ColorPreviewRectangleGrid" Grid.Column="1" Grid.Row="0" Width="44" Margin="12,0,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                                   RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.TopLeft}}"
                                                   RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.BottomRight}}">
                                            <Rectangle.Fill>
                                                <ImageBrush x:Name="ColorPreviewRectangleCheckeredBackgroundImageBrush" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle x:Name="ColorPreviewRectangle" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                                   RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.TopLeft}}"
                                                   RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.BottomRight}}" />
                                        <Rectangle x:Name="PreviousColorRectangle" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed"
                                                   RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.TopLeft}}"
                                                   RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.BottomRight}}" />
                                        <Rectangle x:Name="BorderRectangle" Style="{DynamicResource ColorPickerBorderStyle}" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                                   RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.TopLeft}}"
                                                   RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.BottomRight}}" />
                                    </Grid>
                                </Grid>
                                <Grid x:Name="ThirdDimensionSliderGrid" Margin="0,0,0,6" Grid.Row="1">
                                    <Rectangle x:Name="ThirdDimensionBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="12" VerticalAlignment="Center"
                                               RadiusX="{DynamicResource ColorPickerSliderTopLeftCornerRadius}"
                                               RadiusY="{DynamicResource ColorPickerSliderBottomRightCornerRadius}">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush x:Name="ThirdDimensionSliderGradientBrush" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <controls:ColorPickerSlider x:Name="ThirdDimensionSlider" Minimum="0" Maximum="100"
                                                                ColorChannel="Value" Orientation="Horizontal"
                                                                Style="{DynamicResource DefaultColorPickerSlider}"
                                                                IsThumbToolTipEnabled="False" TabIndex="1"/>
                                </Grid>
                                <Grid x:Name="AlphaSliderGrid" Grid.Row="2" Margin="0,0,0,16" Visibility="Collapsed">
                                    <Rectangle x:Name="AlphaSliderCheckeredBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="12" VerticalAlignment="Center"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.TopLeft}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusDoubleValueConverter}, ConverterParameter={x:Static converters:CornerRadiusOption.BottomRight}}">
                                        <Rectangle.Fill>
                                            <ImageBrush x:Name="AlphaSliderCheckeredBackgroundImageBrush" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="AlphaSliderBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="12" VerticalAlignment="Center"
                                               RadiusX="{DynamicResource ColorPickerSliderTopLeftCornerRadius}"
                                               RadiusY="{DynamicResource ColorPickerSliderBottomRightCornerRadius}">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush x:Name="AlphaSliderGradientBrush" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <controls:ColorPickerSlider x:Name="AlphaSlider" Minimum="0" Maximum="100"
                                                                ColorChannel="Alpha" Orientation="Horizontal"
                                                                Style="{DynamicResource DefaultColorPickerSlider}"
                                                                IsThumbToolTipEnabled="False" TabIndex="2" />
                                </Grid>
                                <StackPanel x:Name="MoreEntriesPanel" Grid.Row="3" Margin="0,0,0,12">
                                    <ToggleButton HorizontalAlignment="Right" HorizontalContentAlignment="Right" Margin="0,0,0,12"
                                                  MinHeight="32" MinWidth="120" Name="MoreButton" Padding="2,2,0,2" Visibility="Collapsed">
                                        <ToggleButton.Content>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,7">
                                                <TextBlock x:Name="MoreButtonLabel" VerticalAlignment="Center" />
                                                <controls:SymbolIcon x:Name="MoreGlyph" FontSize="12"
                                                                     Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                                                     Margin="8,0,0,0" Symbol="ChevronDown24" />
                                            </StackPanel>
                                        </ToggleButton.Content>
                                        <ToggleButton.Style>
                                            <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="ToggleButton">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border x:Name="ContentBorder" Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                                                                    Height="{TemplateBinding Height}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                    MinHeight="{TemplateBinding MinHeight}"
                                                                    MinWidth="{TemplateBinding MinWidth}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                    Width="{TemplateBinding Width}">
                                                                <ContentPresenter x:Name="ContentPresenter"
                                                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                            </Border>
                                                            
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" /> <!-- Replacement for SystemBaseMediumLowColor -->
                                                                </Trigger>

                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" /> <!-- Replacement for SystemBaseMediumColor -->
                                                                </Trigger>

                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" /> <!-- Replacement for SystemBaseMediumLowColor -->
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Grid Grid.IsSharedSizeScope="True" x:Name="TextEntryGrid" Visibility="Collapsed">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120" SharedSizeGroup="InputBoxesGroup" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="132" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ComboBox x:Name="ColorRepresentationComboBox" HorizontalAlignment="Stretch" TabIndex="4">
                                            <ComboBoxItem x:Name="RGBComboBoxItem" IsSelected="True" />
                                            <ComboBoxItem x:Name="HSVComboBoxItem" />
                                        </ComboBox>
                                        <StackPanel x:Name="ColorTextInputPanels" Grid.Row="1" Grid.ColumnSpan="3">
                                            <StackPanel x:Name="ColorChannelTextInputPanel" HorizontalAlignment="Stretch">
                                                <Grid x:Name="RgbPanel">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition SharedSizeGroup="InputBoxesGroup" Width="Auto"/>
                                                        <ColumnDefinition Width="8"/>
                                                        <ColumnDefinition x:Name="RgbTextLabelColumn" Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBox x:Name="RedTextBox" Grid.Row="0" Grid.Column="0" MaxLength="3" Text="255" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="RedLabel" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                    <TextBox x:Name="GreenTextBox" Grid.Row="1" Grid.Column="0" MaxLength="3" Text="255" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="GreenLabel" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                    <TextBox x:Name="BlueTextBox" Grid.Row="2" Grid.Column="0" MaxLength="3" Text="255" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="BlueLabel" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                </Grid>
                                                <Grid x:Name="HsvPanel" Visibility="Collapsed">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition SharedSizeGroup="InputBoxesGroup" Width="Auto"/>
                                                        <ColumnDefinition Width="8"/>
                                                        <ColumnDefinition x:Name="HsvTextLabelColumn" Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBox x:Name="HueTextBox" Grid.Row="0" Grid.Column="0" MaxLength="3" Text="0" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="HueLabel" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                    <TextBox x:Name="SaturationTextBox" Grid.Row="1" Grid.Column="0" MaxLength="3" Text="0" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="SaturationLabel" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                    <TextBox x:Name="ValueTextBox" Grid.Row="2" Grid.Column="0" MaxLength="3" Text="100" Margin="0,12,0,0" />
                                                    <TextBlock x:Name="ValueLabel" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                </Grid>
                                            </StackPanel>
                                            <Grid x:Name="AlphaPanel" Margin="0,12,0,0" Visibility="Collapsed">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="InputBoxesGroup" Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition x:Name="AlphaTextLabelColumn" Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBox x:Name="AlphaTextBox" Width="120" MaxLength="4" Text="100%" />
                                                <TextBlock x:Name="AlphaLabel" Grid.Column="2"  Text="Opacity" VerticalAlignment="Center"/>
                                            </Grid>
                                        </StackPanel>
                                        <TextBox x:Name="HexTextBox" Grid.Column="2" MaxLength="7" Text="#FFFFFF" VerticalAlignment="Top" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsAlphaEnabled" Value="True">
                            <Setter Property="MaxLength" TargetName="HexTextBox" Value="9" />
                        </Trigger>

                        <Trigger Property="IsHexInputVisible" Value="False">
                            <Setter Property="Visibility" TargetName="HexTextBox" Value="Collapsed" />
                        </Trigger>
                        
                        <Trigger Property="IsColorPreviewVisible" Value="False">
                            <Setter Property="Visibility" TargetName="ColorPreviewRectangleGrid" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsColorSpectrumVisible" Value="False">
                            <Setter Property="Visibility" TargetName="ColorSpectrum" Value="Collapsed"/>
                            <Setter Property="Width" TargetName="ColorPreviewRectangleGrid" Value="NaN" />
                            <Setter Property="Height" TargetName="ColorPreviewRectangleGrid" Value="44"/>
                            <Setter Property="Margin" TargetName="ColorPreviewRectangleGrid" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ColorPreviewRectangleGrid" Value="0"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="ColorPreviewRectangleGrid" Value="2"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal" />
                                <Condition Property="PreviousColorVisibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Grid.Row" TargetName="PreviousColorRectangle" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PreviousColorRectangle" Value="1"/>
                            <Setter Property="Grid.RowSpan" TargetName="PreviousColorRectangle" Value="2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="PreviousColorRectangle" Value="1"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal" />
                                <Condition Property="PreviousColorVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Grid.ColumnSpan" TargetName="ColorPreviewRectangle" Value="1"/>
                            <Setter Property="Visibility" TargetName="PreviousColorRectangle" Value="Visible"/>
                            <Setter Property="Grid.Row" TargetName="PreviousColorRectangle" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PreviousColorRectangle" Value="1"/>
                            <Setter Property="Grid.RowSpan" TargetName="PreviousColorRectangle" Value="2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="PreviousColorRectangle" Value="1"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="PreviousColorVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Grid.RowSpan" TargetName="ColorPreviewRectangle" Value="1"/>
                            <Setter Property="Grid.RowSpan" TargetName="PreviousColorRectangle" Value="1"/>
                            <Setter Property="Visibility" TargetName="PreviousColorRectangle" Value="Visible"/>
                        </MultiTrigger>

                        <Trigger Property="IsColorSliderVisible" Value="False">
                            <Setter Property="Visibility" TargetName="ThirdDimensionSliderGrid" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAlphaEnabled" Value="True" />
                                <Condition Property="IsAlphaSliderVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="AlphaSliderGrid" Value="Visible" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMoreButtonVisible" Value="True" />
                                <Condition Property="Orientation" Value="Vertical" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="MoreButton" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsTextEntryGridVisible" Value="True">
                            <Setter Property="Visibility" TargetName="TextEntryGrid" Value="Visible" />
                            <Setter Property="controls:SymbolIcon.Symbol" TargetName="MoreGlyph" Value="ChevronUp24" />
                        </Trigger>

                        <Trigger Property="IsColorChannelTextInputVisible" Value="False">
                            <Setter Property="Visibility" TargetName="ColorRepresentationComboBox" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ColorChannelTextInputPanel" Value="Collapsed"/>
                            <Setter Property="Grid.Column" TargetName="HexTextBox" Value="0"/>
                            <Setter Property="HorizontalAlignment" TargetName="HexTextBox" Value="Left"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAlphaEnabled" Value="True" />
                                <Condition Property="IsAlphaTextInputVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="AlphaPanel" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="ComboBox.SelectedIndex" SourceName="ColorRepresentationComboBox" Value="1">
                            <Setter Property="Visibility" TargetName="RgbPanel" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="HsvPanel" Value="Visible" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="MaxHeight" TargetName="RootGrid" Value="{DynamicResource ColorPickerVerticalOrientationMaxHeight}"/>
                            <Setter Property="MinHeight" TargetName="RootGrid" Value="{DynamicResource ColorPickerVerticalOrientationMinHeight}"/>
                            <Setter Property="MinWidth" TargetName="RootGrid" Value="0"/>
                            <Setter Property="MaxWidth" TargetName="RootGrid" Value="10000"/>
                            <Setter Property="Margin" TargetName="ColorSpectrumGrid" Value="0"/>
                            <Setter Property="Margin" TargetName="ColorPreviewRectangleGrid" Value="12,0,16,0" />

                            <Setter Property="Grid.Column"         TargetName="ThirdDimensionSliderGrid" Value="1"/>
                            <Setter Property="Grid.Row"            TargetName="ThirdDimensionSliderGrid" Value="0"/>
                            <Setter Property="Margin"              TargetName="ThirdDimensionSliderGrid" Value="0,0,6,0" />
                            <Setter Property="Orientation"         TargetName="ThirdDimensionSlider" Value="Vertical"/>
                            <Setter Property="Height"              TargetName="ThirdDimensionBackgroundRectangle" Value="Auto"/>
                            <Setter Property="Width"               TargetName="ThirdDimensionBackgroundRectangle" Value="12" />
                            <Setter Property="HorizontalAlignment" TargetName="ThirdDimensionBackgroundRectangle" Value="Center"/>
                            <Setter Property="VerticalAlignment"   TargetName="ThirdDimensionBackgroundRectangle" Value="Stretch"/>
                            <Setter Property="RenderTransform"     TargetName="ThirdDimensionBackgroundRectangle">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Grid.Column"         TargetName="AlphaSliderGrid" Value="2" />
                            <Setter Property="Grid.Row"            TargetName="AlphaSliderGrid" Value="0" />
                            <Setter Property="Margin"              TargetName="AlphaSliderGrid" Value="0,0,16,0" />
                            <Setter Property="Orientation"         TargetName="AlphaSlider" Value="Vertical" />
                            <Setter Property="Height"              TargetName="AlphaSliderCheckeredBackgroundRectangle" Value="Auto" />
                            <Setter Property="Width"               TargetName="AlphaSliderCheckeredBackgroundRectangle" Value="12" />
                            <Setter Property="HorizontalAlignment" TargetName="AlphaSliderCheckeredBackgroundRectangle" Value="Center" />
                            <Setter Property="VerticalAlignment"   TargetName="AlphaSliderCheckeredBackgroundRectangle" Value="Stretch" />
                            <Setter Property="Height"              TargetName="AlphaSliderBackgroundRectangle" Value="Auto" />
                            <Setter Property="Width"               TargetName="AlphaSliderBackgroundRectangle" Value="12" />
                            <Setter Property="HorizontalAlignment" TargetName="AlphaSliderBackgroundRectangle" Value="Center" />
                            <Setter Property="VerticalAlignment"   TargetName="AlphaSliderBackgroundRectangle" Value="Stretch" />
                            <Setter Property="RenderTransform"     TargetName="AlphaSliderBackgroundRectangle">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Grid.Column" TargetName="MoreEntriesPanel" Value="3"/>
                            <Setter Property="Grid.Row" TargetName="MoreEntriesPanel" Value="0"/>
                            <Setter Property="Margin" TargetName="MoreEntriesPanel" Value="0"/>
                            <Setter Property="Margin" TargetName="MoreButton" Value="0"/>

                            <Setter Property="Grid.Row" TargetName="ColorRepresentationComboBox" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ColorTextInputPanels" Value="2"/>
                            <Setter Property="TabIndex" TargetName="HexTextBox" Value="3"/>
                            <Setter Property="Grid.Row" TargetName="HexTextBox" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HexTextBox" Value="0"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="HexTextBox" Value="1"/>
                            <Setter Property="Margin" TargetName="HexTextBox" Value="0,0,0,12"/>
                            <Setter Property="HorizontalAlignment" TargetName="HexTextBox" Value="Stretch"/>
                            <Setter Property="Width" TargetName="HexTextBox" Value="120"/>

                            <Setter Property="Width" TargetName="RgbTextLabelColumn" Value="{DynamicResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                            <Setter Property="Width" TargetName="HsvTextLabelColumn" Value="{DynamicResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                            <Setter Property="Width" TargetName="AlphaTextLabelColumn" Value="{DynamicResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultColorPicker}" TargetType="controls:ColorPicker" />
</ResourceDictionary>